{"version":3,"sources":["./src/app/components/current-edition/current-edition.component.ts","./src/app/components/current-edition/current-edition.component.html","./src/environments/environment.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/services/iipu.service.ts","./src/app/components/inputs/inputs.component.ts","./src/app/components/inputs/inputs.component.html","./src/app/pipes/label-type.pipe.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { IParamGeneric } from 'src/app/interfaces/edit-type.interface';\n\n@Component({\n  selector: 'app-current-edition',\n  templateUrl: './current-edition.component.html',\n  styleUrls: ['./current-edition.component.css']\n})\nexport class CurrentEditionComponent implements OnInit {\n  @Input() parameters: IParamGeneric = {};\n  @Output() emitNewParams: EventEmitter<IParamGeneric> = new EventEmitter<IParamGeneric>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n public remove(paramKey: string): void{\n  const param =  JSON.parse(JSON.stringify(this.parameters));\n  delete param[paramKey];\n  this.emitNewParams.emit(param);\n}\n\n}\n","<mat-form-field class=\"chip-list\" appearance=\"fill\">\n  <mat-label>Editions applied</mat-label>\n  <mat-chip-list #chipList aria-label=\"Fruit selection\">\n    <mat-chip *ngFor=\"let param of parameters | keyvalue \" [selectable]=\"true\"\n             [removable]=\"true\">\n      {{param.key | titlecase}}\n      <button mat-icon-button class=\"remove-button\" (click)=\"remove(param.key)\">\n        <mat-icon>cancel</mat-icon>\n      </button>\n    </mat-chip>\n  </mat-chip-list>\n</mat-form-field>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<mat-toolbar color=\"primary\">\n  <button mat-button >IipuAngular</button>\n  <!-- START EDITTING BUTTON -->\n  <button mat-stroked-button (click)=\"sidenav.open()\">Start editing</button>\n  <span class=\"spacer\"></span>\n  <!-- UNDO BUTTON -->\n  <button\n    mat-icon-button\n    class=\"example-icon\"\n    [disabled]=\"!undoAvailable\"\n    aria-label=\"Undo button\"\n    (click)=\"prevEdition()\"\n  >\n    <mat-icon>undo</mat-icon>\n  </button>\n  <!-- REDO BUTTON -->\n  <button\n    mat-icon-button\n    class=\"example-icon\"\n    [disabled]=\"!redoAvailable\"\n    aria-label=\"Redo button\"\n    (click)=\"nextEdition()\"\n  >\n    <mat-icon>redo</mat-icon>\n  </button>\n  <!-- PROFILE BUTTON -->\n  <button\n    mat-icon-button\n    class=\"example-icon\"\n    aria-label=\"Profile button\"\n    (click)=\"goToProfile()\"\n  >\n    <mat-icon>person</mat-icon>\n  </button>\n</mat-toolbar>\n\n<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #sidenav class=\"sidenav\" mode=\"side\" color=\"primary\">\n    <mat-selection-list #edition [multiple]=\"false\">\n      <!-- ALL ROTATION AND ADJUSTMENTS' LIST -->\n      <mat-list-option\n        *ngFor=\"let edition of availableEditions\"\n        [value]=\"edition\"\n        (click)=\"setEditionType(edition)\"\n      >\n        {{ edition.display_name | titlecase }}\n      </mat-list-option>\n    </mat-selection-list>\n  </mat-sidenav>\n  <mat-sidenav-content class=\"sidenav-content\">\n\n    <form class=\"form-box\" [formGroup]=\"imagesForm\">\n      <!-- HEADER WITH IMAGE SELECTOR -->\n      <div class=\"img-picker\">\n        <h3 class=\"img-picker-label\">Pick an image to edit!</h3>\n        <mat-form-field appearance=\"fill\" class=\"img-select\">\n          <mat-label>Choose an image</mat-label>\n          <mat-select\n            class=\"select-img\"\n            formControlName=\"index\"\n            (selectionChange)=\"setValueToImageForm(testImgs[$event.value])\"\n          >\n            <mat-option\n              *ngFor=\"let img of testImgs; index as i\"\n              [value]=\"i\"\n              color=\"secondary\"\n            >\n              {{ img.name }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n\n      <!-- IMAGE, EDITIONS APPLIED AND URL -->\n      <div class=\"img-display-box\">\n        <div class=\"img-and-editions\">\n          <!-- MAIN IMAGE -->\n          <img\n            #img\n            ixImg\n            class=\"mainImg\"\n            path=\"{{ imagesForm.value.path }}\"\n            sizes=\"calc(100vw - 128px)\"\n            [imgixParams]=\"editionHistory[actualStep]\"\n          />\n          <!-- COMPONENT DISPLAYING EDITTIONS APPLIED -->\n          <app-current-edition\n            *ngIf=\"showEditApplied\"\n            class=\"current-edition\"\n            [parameters]=\"editionHistory[actualStep]\"\n            (emitNewParams)=\"paramsModified($event)\"\n          ></app-current-edition>\n        </div>\n        <!-- IMAGE'S URL GENERATED WITH ALL PARAMETERS -->\n        <div class=\"url-textbox\">\n          <div>\n            {{\n              imagesForm.controls.url.value +\n                imagesForm.controls.parameters.value\n            }}\n          </div>\n        </div>\n      </div>\n    </form>\n\n<!-- COMPONENT WITH INPUTS TO GENERATE THE PARAMETERS -->\n    <div class=\"inputs-box\" *ngIf=\"editionSelected\">\n      <app-inputs\n        [parameter]=\"editionSelected\"\n        (paramEmitter)=\"setParam($event)\"\n      ></app-inputs>\n    </div>\n\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup} from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { IParameter, IParametersFull, IParamGeneric } from './interfaces/edit-type.interface';\nimport { ITestImage } from './interfaces/imagen-test.interface';\nimport { IipuService } from './services/iipu.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  public testImgs: ITestImage[] = [];\n  public imagesForm: FormGroup;\n  public showHome = true;\n  public allParameters: any = {};\n  public editionSelected: IParameter;\n  public parametersJSON: IParametersFull;\n  public availableEditions: IParameter[] = [];\n  public showEditApplied = false;\n  public undoAvailable = false;\n  public redoAvailable = false;\n  public editionHistory: IParamGeneric[] = [];\n  public actualStep: number = -1;\n  private editionsListNames: string[] = [ 'rotation', 'adjustment'];\n\n\n  constructor (\n    public service: IipuService,\n    private fb: FormBuilder,\n    ) {\n  }\n\n  ngOnInit(){\n    this.init();\n  }\n\n  public paramsModified(param: IParamGeneric): void{\n    this.setEditionHistory(param);\n    this.showEditApplied = Object.keys(this.getActParam()).length > 0;\n    this.setUndoRedoValues();\n    this.imagesForm.controls.parameters.setValue(this.getParamString(this.getActParam()));\n  }\n\n  public prevEdition(): void{\n    this.actualStep --;\n    this.showEditApplied = Object.keys(this.getActParam()).length > 0;\n    this.imagesForm.controls.parameters.setValue(this.getParamString(this.getActParam()));\n    this.setUndoRedoValues();\n  }\n\n  public nextEdition(): void{\n    this.actualStep ++;\n    this.showEditApplied = Object.keys(this.getActParam()).length > 0;\n    this.imagesForm.controls.parameters.setValue(this.getParamString(this.getActParam()));\n    this.setUndoRedoValues();\n  }\n\n  public goToProfile():void{\n    window.open('https://www.linkedin.com/in/victoria-mariano/', \"_blank\")\n  }\n\n  public setParam(paramObj: IParamGeneric): void{\n    if ( this.actualStep === -1 ){\n      this.paramsModified(paramObj);\n    } else {\n      const key = Object.keys(paramObj)[0];\n      const value = paramObj[key];\n      const param = JSON.parse(JSON.stringify(this.getActParam()));\n      param[key] = value;\n      this.paramsModified(param);\n    }\n  }\n\n  public showHomepage(showH: boolean): void{\n    this.showHome = showH;\n  }\n\n  public setEditionType(editionType: IParameter){\n    this.editionSelected = editionType;\n  }\n\n  public setValueToImageForm(img: ITestImage): void{\n    this.imagesForm.controls.url.setValue(img.url);\n    this.imagesForm.controls.name.setValue(img.name);\n    this.imagesForm.controls.path.setValue(img.path);\n  }\n\n  private getActParam(): IParamGeneric{\n    if (this.actualStep === -1) {\n      return {}\n    } else {\n      return this.editionHistory[this.actualStep];\n    }\n  }\n\n  private setUndoRedoValues(): void{\n    this.undoAvailable = this.actualStep >= 0;\n    this.redoAvailable = this.actualStep < this.editionHistory.length -1;\n  }\n\n  private setEditionHistory(paramObj: IParamGeneric): void{\n    this.actualStep++;\n    if(this.actualStep <= this.editionHistory.length-1){\n      this.editionHistory.splice(this.actualStep);\n    }\n    this.editionHistory.push(paramObj);\n    this.actualStep = this.editionHistory.length - 1;\n    this.setUndoRedoValues();\n  }\n\n  private getParamString(paramObj: IParamGeneric): string{\n    let strParam: string= '?';\n    Object.keys(paramObj).forEach(paramKey => {\n      const value = paramObj[paramKey];\n      strParam = strParam + paramKey + '=' + value + '&';\n    })\n    return strParam\n  }\n\n  private formCreation(): void {\n    this.imagesForm = this.fb.group({\n      url: [''],\n      name: [''],\n      path: [''],\n      parameters:[''],\n      index: []\n    });\n  }\n\n  private extractAllPaths(): void{\n    this.testImgs.map(img => img.path = this.extractPathFromUrl(img.url));\n  }\n\n  private extractPathFromUrl(url: string): string{\n    return url.slice(25,url.length);\n  }\n\n  private selectEditionTypes(allParams: IParametersFull): void{\n    Object.entries(allParams).forEach(([key, value]) => {\n      this.editionsListNames.includes(value.category) ? this.addParamToArray(key,value) : null;\n    });\n  }\n\n  private addParamToArray(tagKey: string, value: IParameter): void {\n    let param: IParameter = value;\n    param.tag = tagKey;\n    this.availableEditions.push(param)\n  }\n\n  private getTestImgs(): void{\n    let thisSubsTestImgs: Subscription = this.service.getTestImgs().subscribe((res: ITestImage[]) => {\n      if(res){\n        this.testImgs = res;\n        this.extractAllPaths();\n        this.setValueToImageForm(this.testImgs[0]);\n        thisSubsTestImgs.unsubscribe();\n      }\n    });\n  }\n\n  private getParameters(): void {\n    let thisSubsParameters: Subscription = this.service.getParametersJSON().subscribe((res:IParametersFull) => {\n      if(res){\n        this.parametersJSON = res;\n        this.allParameters = this.parametersJSON.parameters;\n        this.selectEditionTypes(this.allParameters);\n        thisSubsParameters.unsubscribe();\n      }\n    });\n  }\n\n  private init(): void {\n    this.formCreation();\n    this.getTestImgs();\n    this.getParameters();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSelectModule } from '@angular/material/select';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ImgixAngularModule } from '@imgix/angular';\nimport { InputsComponent } from './components/inputs/inputs.component';\nimport { LabelTypePipe } from './pipes/label-type.pipe';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatRippleModule } from '@angular/material/core';\nimport { CurrentEditionComponent } from './components/current-edition/current-edition.component';\nimport { MatChipsModule } from '@angular/material/chips';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    InputsComponent,\n    LabelTypePipe,\n    CurrentEditionComponent\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatListModule,\n    MatSliderModule,\n    MatSelectModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatButtonToggleModule,\n    MatRippleModule,\n    MatChipsModule,\n    ImgixAngularModule.forRoot({\n      domain: 'assets.imgix.net',\n      defaultImgixParams: {\n        auto: 'format,compress',\n      },\n    }),\n    ],\n  providers: [\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IParametersFull } from '../interfaces/edit-type.interface';\nimport { ITestImage } from '../interfaces/imagen-test.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IipuService {\n\n  constructor( private http: HttpClient) { }\n\n  public getTestImgs(): Observable<ITestImage[]> {\n    return this.http.get<ITestImage[]>('https://storage.googleapis.com/nanlabs-engineering-technical-interviews/imgix-samples-list.json');\n  }\n\n  public getParametersJSON(): Observable<IParametersFull> {\n    return this.http.get<IParametersFull>('https://raw.githubusercontent.com/imgix/imgix-url-params/master/dist/parameters.json');\n  }\n}\n","import { Component, Input, OnInit, Output } from '@angular/core';\nimport { IExpects, IParameter, IParamGeneric } from 'src/app/interfaces/edit-type.interface';\nimport { EventEmitter } from '@angular/core';\nimport { IInputs } from 'src/app/interfaces/inputs.interface';\n\n@Component({\n  selector: 'app-inputs',\n  templateUrl: './inputs.component.html',\n  styleUrls: ['./inputs.component.css']\n})\nexport class InputsComponent implements OnInit {\n  @Output() paramEmitter: EventEmitter<IParamGeneric> = new EventEmitter<IParamGeneric>();\n  @Input('parameter') public set setInputs(param: IParameter) {\n    this.parameter = param;\n    this.buildInputs();\n  }\n  public parameter: IParameter;\n  public paramSelected: IParamGeneric = {};\n  public inputs: IInputs;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  private buildInputs(): void {\n    this.inputs = {\n      label: '',\n      tag: '',\n      type: 0,\n      default: '',\n      options: [],\n      possible_valuesNum: [],\n      possible_valuesStr: []\n    };\n    this.inputs.type = this.getTypeOfInput(this.getExpects().type);\n    this.inputs.tag = this.parameter.tag;\n    this.inputs.label = this.parameter.display_name;\n\n    switch (this.inputs.type) {\n      case 1:\n        this.inputs.possible_valuesStr = this.getStrArrValues();\n        this.inputs.default = this.getExpects().default;\n        break;\n      case 2:\n        this.inputs.max = this.getMax();\n        this.inputs.min = this.getMin();\n        this.inputs.default = this.getExpects().default;\n        break;\n      case 3:\n        this.inputs.max = this.getMax();\n        this.inputs.min = this.getMin();\n        this.inputs.possible_valuesNum = this.getNumArrValues();\n        break;\n      case 4:\n        this.inputs.default = this.getExpects().default;\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  public setParamWithString(tag: string, option: string): void {\n    this.paramSelected = {};\n    this.addParameter(tag, option);\n    this.paramEmitter.emit(this.paramSelected);\n  }\n\n  public setParamWithNumber(value: number | string | boolean): void {\n    this.paramSelected = {};\n    this.addParameter(this.inputs.tag, Number(value));\n    this.paramEmitter.emit(this.paramSelected);\n  }\n\n  public setParamBoolean(): void {\n    this.inputs.default = !this.inputs.default;\n    this.paramSelected = {};\n    this.addParameter(this.inputs.tag, String(this.inputs.default));\n    this.paramEmitter.emit(this.paramSelected);\n  }\n\n  private addParameter(key: string, value: number | string): void {\n    this.paramSelected[key] = value.valueOf();\n  }\n\n  private getExpects(): IExpects {\n    return this.parameter.expects[0];\n  }\n\n  private getStrArrValues(): string[] {\n    let strings: string[] = []\n    this.getExpects().possible_values.forEach(str => {\n      strings.push(String(str))\n    });\n    return strings;\n  }\n\n  private getNumArrValues(): number[] {\n    let numbers: number[] = []\n    this.getExpects().possible_values.forEach(num => numbers.push(parseInt(num, 10)));\n    return numbers;\n  }\n\n  private getMax(): number {\n    if (this.parameter.expects[0].strict_range) {\n      return this.parameter.expects[0].strict_range.max;\n    } else if (this.parameter.expects[0].suggested_range) {\n      return this.parameter.expects[0].suggested_range.max;\n    } else { return 0 }\n  }\n\n  private getMin(): number {\n    if (this.parameter.expects[0].strict_range) {\n      return this.parameter.expects[0].strict_range.min;\n    } else if (this.parameter.expects[0].suggested_range) {\n      return this.parameter.expects[0].suggested_range.min;\n    } else { return 0 }\n  }\n\n  private getTypeOfInput(type: string): number {\n    let inputType: number;\n    switch (type) {\n      case 'string':\n        inputType = 1;\n        break;\n      case 'number':\n        inputType = 2;\n        break;\n      case 'integer':\n        this.getExpects().possible_values ?\n          inputType = 3 : inputType = 2;\n        break;\n      case 'boolean':\n        inputType = 4;\n        break;\n      default:\n        break;\n    }\n    return inputType;\n  }\n}\n","<!-- MULTIPLE CHOICE OF STRINGS -->\n<div class=\"opt-buttons\" *ngIf=\"inputs.type === 1\">\n  <mat-button-toggle-group aria-label=\"Values\" color=\"secondary\">\n    <mat-button-toggle\n      [value]=\"option\"\n      *ngFor=\"let option of inputs.possible_valuesStr\"\n      (click)=\"setParamWithString(inputs.tag, option)\"\n      >{{ option | labelType }}</mat-button-toggle\n    >\n  </mat-button-toggle-group>\n</div>\n<!-- SLIDER WITH MAX AND MIN -->\n<div *ngIf=\"inputs.type === 2\">\n  <div class=\"label-container\">\n    <label class=\"label\">\n      {{ inputs.label | titlecase }}\n    </label>\n    <label class=\"value-label\">\n      {{ inputs.default }}\n    </label>\n  </div>\n  <mat-slider\n    [max]=\"inputs.max\"\n    [min]=\"inputs.min\"\n    [(ngModel)]=\"inputs.default\"\n    (change)=\"setParamWithNumber(inputs.default)\"\n  >\n  </mat-slider>\n</div>\n<!-- MULTIPLE CHOICE OF NUMBERS -->\n<div *ngIf=\"inputs.type === 3\">\n  <mat-form-field appearance=\"fill\" class=\"option-select\">\n    <mat-label>Choose an option</mat-label>\n    <mat-select (selectionChange)=\"setParamWithNumber($event.value)\">\n      <mat-option\n        *ngFor=\"let input of inputs.possible_valuesNum\"\n        [value]=\"input\"\n      >\n        {{ input }}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n</div>\n<!-- BOOLEAN WITH ONE BUTTON -->\n<div *ngIf=\"inputs.type === 4\">\n  <button mat-raised-button color=\"accent\" (click)=\"setParamBoolean()\">\n    {{ inputs.label | titlecase }}\n  </button>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'labelType'\n})\nexport class LabelTypePipe implements PipeTransform {\n// THIS PIPE TRANSFORMS SOME PARAMETERS' VALUES INTO THE APPROPIATE LABEL\n\n  transform(value: string, ...args: unknown[]): string {\n    let label: string = 'Option'\n\n    switch (value) {\n      case 'h':\n        label = 'Horizontal';\n        break;\n      case 'v':\n        label = 'Vertical';\n        break;\n      case 'hv':\n        label = 'Horizontal-Vertical';\n        break;\n      default:\n        break;\n    }\n\n    return label;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}